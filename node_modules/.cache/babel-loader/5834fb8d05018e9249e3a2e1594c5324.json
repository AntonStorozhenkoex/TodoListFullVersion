{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { ADD_TODO, DELETE_TODO, TOGGLE_TODO, DELETE_ALL_TODO, GET_TODOS_SUCCESS } from \"./types\";\n\nconst todo = (state, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        id: action.id,\n        value: action.value,\n        isDone: false\n      };\n\n    case DELETE_TODO:\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_ALL_TODO:\n      if (state.id !== uuidv4()) {\n        return state;\n      }\n\n      return { ...state\n      };\n\n    case TOGGLE_TODO:\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return { ...state,\n        isDone: !state.isDone\n      };\n\n    default:\n      return state;\n  }\n};\n\nlet todoList = [];\nexport const todos = (state = todoList, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, todo(undefined, action)];\n\n    case DELETE_TODO:\n      return state.filter(t => t.id !== action.id);\n\n    case TOGGLE_TODO:\n      return state.map(t => todo(t, action));\n\n    case DELETE_ALL_TODO:\n      return state.filter(t => t.id === uuidv4());\n\n    case GET_TODOS_SUCCESS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/work/TodoListReactReduxAPI/src/redux/todos/index.js"],"names":["v4","uuidv4","ADD_TODO","DELETE_TODO","TOGGLE_TODO","DELETE_ALL_TODO","GET_TODOS_SUCCESS","todo","state","action","type","id","value","isDone","todoList","todos","undefined","filter","t","map","payload"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,eAA7C,EAA8DC,iBAA9D,QAAuF,SAAvF;;AACA,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,aAAO;AACLS,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADN;AAELC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAFT;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAKF,SAAKV,WAAL;AACE,UAAIK,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAxB,EAA4B;AAC1B,eAAOH,KAAP;AACD;;AACD,aAAO,EACL,GAAGA;AADE,OAAP;;AAGF,SAAKH,eAAL;AACE,UAAIG,KAAK,CAACG,EAAN,KAAaV,MAAM,EAAvB,EAA2B;AACzB,eAAOO,KAAP;AACD;;AACD,aAAO,EACL,GAAGA;AADE,OAAP;;AAGF,SAAKJ,WAAL;AACE,UAAII,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAxB,EAA4B;AAC1B,eAAOH,KAAP;AACD;;AACD,aAAO,EACL,GAAGA,KADE;AAELK,QAAAA,MAAM,EAAE,CAACL,KAAK,CAACK;AAFV,OAAP;;AAIF;AACE,aAAOL,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,IAAIM,QAAQ,GAAE,EAAd;AAIA,OAAO,MAAMC,KAAK,GAAG,CAACP,KAAK,GAAGM,QAAT,EAAmBL,MAAnB,KAA8B;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,aAAO,CAAC,GAAGM,KAAJ,EAAWD,IAAI,CAACS,SAAD,EAAYP,MAAZ,CAAf,CAAP;;AACF,SAAKN,WAAL;AACE,aAAOK,KAAK,CAACS,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACP,EAAF,KAASF,MAAM,CAACE,EAApC,CAAP;;AACF,SAAKP,WAAL;AACE,aAAOI,KAAK,CAACW,GAAN,CAAWD,CAAD,IAAOX,IAAI,CAACW,CAAD,EAAIT,MAAJ,CAArB,CAAP;;AACF,SAAKJ,eAAL;AACE,aAAOG,KAAK,CAACS,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACP,EAAF,KAASV,MAAM,EAAnC,CAAP;;AACF,SAAKK,iBAAL;AACE,aAAOG,MAAM,CAACW,OAAd;;AACF;AACE,aAAOZ,KAAP;AAZJ;AAcD,CAfM","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { ADD_TODO, DELETE_TODO, TOGGLE_TODO, DELETE_ALL_TODO, GET_TODOS_SUCCESS } from \"./types\";\nconst todo = (state, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        id: action.id,\n        value: action.value,\n        isDone: false,\n      };\n    case DELETE_TODO:\n      if (state.id !== action.id) {\n        return state;\n      }\n      return {\n        ...state,\n      };\n    case DELETE_ALL_TODO:\n      if (state.id !== uuidv4()) {\n        return state;\n      }\n      return {\n        ...state,\n      };\n    case TOGGLE_TODO:\n      if (state.id !== action.id) {\n        return state;\n      }\n      return {\n        ...state,\n        isDone: !state.isDone,\n      };\n    default:\n      return state;\n  }\n};\n\nlet todoList =[]\n\n\n\nexport const todos = (state = todoList, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, todo(undefined, action)];\n    case DELETE_TODO:\n      return state.filter((t) => t.id !== action.id);\n    case TOGGLE_TODO:\n      return state.map((t) => todo(t, action));\n    case DELETE_ALL_TODO:\n      return state.filter((t) => t.id === uuidv4());\n    case GET_TODOS_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}