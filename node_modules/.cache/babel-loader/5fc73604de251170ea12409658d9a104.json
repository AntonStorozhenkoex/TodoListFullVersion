{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { link } from \"../../localhost\";\nimport { ADD_TODO, DELETE_ALL_TODO_API, TOGGLE_TODO_API } from \"./types\";\nexport const toggleTodoAction = todo => ({\n  type: \"TOGGLE_TODO\",\n  id: todo.id\n});\nexport const deleteTodoAction = todo => ({\n  type: \"DELETE_TODO\",\n  id: todo.id\n});\nexport const addTodoAction = inputValue => ({\n  type: \"ADD_TODO\",\n  id: uuidv4(),\n  value: inputValue\n});\nexport const deleteAllTodo = todos => ({\n  type: \"DELETE_ALL_TODO\",\n  id: todos.id\n});\nexport const fetchTodos = () => async dispatch => {\n  // fetch(link).then(res)\n  // TODO: replace await with then\n  const response = await fetch(link);\n  const todos = await response.json();\n  dispatch({\n    type: \"GET_TODOS_SUCCESS\",\n    payload: todos\n  });\n};\nexport const addTodoAPI = inputValue => async (dispatch, state, api) => {\n  /*dispatch({\n    type:\"add_new_todo_api\",\n    payload: fetch(link,{\n      method:\"post\",\n      headers: { \"content-type\": \"application/json\" },\n      body: json.stringify({ value: inputvalue }),\n    })\n  }*/\n  dispatch({\n    type: 'START_ADD_TODO'\n  });\n  return api.createNewTodo(inputValue).then(response => {\n    console.log('response');\n    dispatch({\n      type: ADD_TODO,\n      payload: response\n    });\n  }).catch(err => dispatch({\n    type: 'ERROR_IN_ADD_TODO'\n  }));\n};\nexport const deleteTodoAPI = todo => async dispatch => {\n  dispatch({\n    type: \"DELETE_TODO_API\",\n    payload: fetch(`${link}${todo.id}`, {\n      method: \"DELETE\"\n    })\n  });\n};\nexport const deleteAllTodoAPI = () => async dispatch => {\n  dispatch({\n    type: DELETE_ALL_TODO_API,\n    payload: fetch(link, {\n      method: \"DELETE\"\n    })\n  });\n};\nexport const toggleTodoAPI = elem => async dispatch => {\n  dispatch({\n    type: TOGGLE_TODO_API,\n    payload: fetch(`${link}/toggle/${elem.id}`, {\n      method: \"PUT\"\n    })\n  });\n};","map":{"version":3,"sources":["/home/user/work/TodoListReactReduxAPI/src/redux/todos/action.js"],"names":["v4","uuidv4","link","ADD_TODO","DELETE_ALL_TODO_API","TOGGLE_TODO_API","toggleTodoAction","todo","type","id","deleteTodoAction","addTodoAction","inputValue","value","deleteAllTodo","todos","fetchTodos","dispatch","response","fetch","json","payload","addTodoAPI","state","api","createNewTodo","then","console","log","catch","err","deleteTodoAPI","method","deleteAllTodoAPI","toggleTodoAPI","elem"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport {link} from \"../../localhost\";\nimport {ADD_TODO, DELETE_ALL_TODO_API, TOGGLE_TODO_API} from \"./types\";\n\nexport const toggleTodoAction = (todo) => ({\n  type: \"TOGGLE_TODO\",\n  id: todo.id,\n});\n\nexport const deleteTodoAction = (todo) => ({\n  type: \"DELETE_TODO\",\n  id: todo.id,\n});\n\nexport const addTodoAction = (inputValue) => ({\n  type: \"ADD_TODO\",\n  id: uuidv4(),\n  value: inputValue,\n});\nexport const deleteAllTodo = (todos) => ({\n  type: \"DELETE_ALL_TODO\",\n  id: todos.id,\n});\n\nexport const fetchTodos = () => async (dispatch) =>{\n  // fetch(link).then(res)\n  // TODO: replace await with then\n  const response = await  fetch(link);\n  const todos = await response.json();\n\n  dispatch({\n    type: \"GET_TODOS_SUCCESS\",\n    payload: todos\n  })\n}\nexport const addTodoAPI = (inputValue) => async (dispatch, state, api) =>{\n  /*dispatch({\n    type:\"add_new_todo_api\",\n    payload: fetch(link,{\n      method:\"post\",\n      headers: { \"content-type\": \"application/json\" },\n      body: json.stringify({ value: inputvalue }),\n    })\n  }*/\n  dispatch({\n    type: 'START_ADD_TODO'\n  })\n\n  return api.createNewTodo(inputValue).then(response => {\n    console.log('response')\n\n    dispatch({\n      type: ADD_TODO,\n      payload: response\n    })\n  }).catch(err => dispatch({\n    type: 'ERROR_IN_ADD_TODO'\n  }))\n}\nexport const deleteTodoAPI = (todo) => async (dispatch) => {\n  dispatch({\n    type: \"DELETE_TODO_API\",\n    payload: fetch(`${link}${todo.id}`, {\n      method: \"DELETE\",\n    })\n  })\n}\n\nexport const deleteAllTodoAPI = () => async  (dispatch) =>{\n    dispatch({\n      type:DELETE_ALL_TODO_API,\n      payload:fetch(link, {\n        method: \"DELETE\",\n      })\n    })\n}\nexport const toggleTodoAPI = (elem) => async (dispatch) =>{\n  dispatch({\n    type:TOGGLE_TODO_API,\n    payload:fetch(`${link}/toggle/${elem.id}`, {\n      method: \"PUT\",\n    })\n  })\n}"]},"metadata":{},"sourceType":"module"}