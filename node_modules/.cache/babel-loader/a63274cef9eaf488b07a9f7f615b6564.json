{"ast":null,"code":"import { ADD_TODO, DELETE_ALL_TODO, DELETE_TODO, GET_TODOS_SUCCESS, TOGGLE_TODO } from \"./types\";\n/*\n\nexport const toggleTodoAction = (todo) => ({\n  type: \"TOGGLE_TODO\",\n  id: todo.id,\n});\n\nexport const deleteTodoAction = (todo) => ({\n  type: \"DELETE_TODO\",\n  id: todo.id,\n});\n\nexport const addTodoAction = (inputValue) => ({\n  type: \"ADD_TODO\",\n  id: uuidv4(),\n  value: inputValue,\n});\nexport const deleteAllTodo = (todos) => ({\n  type: \"DELETE_ALL_TODO\",\n  id: todos.id,\n});\n*/\n\nexport const fetchTodos = () => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_LOADING_TODOS\"\n  });\n  return api.fetchData().then(response => {\n    console.log(\"loading\");\n    dispatch({\n      type: GET_TODOS_SUCCESS,\n      payload: response\n    });\n  }).catch(err => dispatch({\n    type: \"ERROR_IN_LOADING_TODOS\"\n  }));\n};\nexport const addNewTodo = inputValue => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_ADD_TODO\"\n  });\n  return api.createNewTodo(inputValue).then(response => {\n    console.log(response);\n    dispatch({\n      type: ADD_TODO,\n      payload: response\n    });\n  }).catch(err => dispatch({\n    type: \"ERROR_IN_ADD_TODO\"\n  }));\n};\nexport const deleteTodo = todo => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_DELETE_TODO\"\n  });\n  return api.deleteTodo(todo).then(response => {\n    console.log(todo.id);\n    dispatch({\n      type: DELETE_TODO,\n      payload: todo.id\n    });\n  }).catch(err => dispatch({\n    type: \"ERROR_IN_DELETING_TODO\"\n  }));\n};\nexport const toggleTodo = elem => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_TOGGLE_TODO\"\n  });\n  return api.listItemToggle(elem).then(response => {\n    console.log(elem);\n    dispatch({\n      type: TOGGLE_TODO,\n      payload: elem.id\n    });\n  });\n};\nexport const deleteAllTodo = () => async (dispatch, state, api) => {\n  dispatch({\n    type: \"START_DELETE_ALL_TODO\"\n  });\n  return api.deleteAllItems().then(response => {\n    console.log(response);\n    dispatch({\n      type: DELETE_ALL_TODO,\n      payload: response\n    });\n  }).catch(err => dispatch({\n    type: \"ERROR_IN_DELETED_ALL\"\n  }));\n};","map":{"version":3,"sources":["/home/user/work/TodoListReactReduxAPI/src/redux/todos/action.js"],"names":["ADD_TODO","DELETE_ALL_TODO","DELETE_TODO","GET_TODOS_SUCCESS","TOGGLE_TODO","fetchTodos","dispatch","state","api","type","fetchData","then","response","console","log","payload","catch","err","addNewTodo","inputValue","createNewTodo","deleteTodo","todo","id","toggleTodo","elem","listItemToggle","deleteAllTodo","deleteAllItems"],"mappings":"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","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_ALL_TODO,\n  DELETE_TODO,\n  GET_TODOS_SUCCESS,\n  TOGGLE_TODO,\n} from \"./types\";\n/*\n\nexport const toggleTodoAction = (todo) => ({\n  type: \"TOGGLE_TODO\",\n  id: todo.id,\n});\n\nexport const deleteTodoAction = (todo) => ({\n  type: \"DELETE_TODO\",\n  id: todo.id,\n});\n\nexport const addTodoAction = (inputValue) => ({\n  type: \"ADD_TODO\",\n  id: uuidv4(),\n  value: inputValue,\n});\nexport const deleteAllTodo = (todos) => ({\n  type: \"DELETE_ALL_TODO\",\n  id: todos.id,\n});\n*/\n\nexport const fetchTodos = () => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_LOADING_TODOS\",\n  });\n  return api\n    .fetchData()\n    .then((response) => {\n      console.log(\"loading\");\n\n      dispatch({\n        type: GET_TODOS_SUCCESS,\n        payload: response,\n      });\n    })\n    .catch((err) =>\n      dispatch({\n        type: \"ERROR_IN_LOADING_TODOS\",\n      })\n    );\n};\nexport const addNewTodo = (inputValue) => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_ADD_TODO\",\n  });\n  return api\n    .createNewTodo(inputValue)\n    .then((response) => {\n      console.log(response);\n\n      dispatch({\n        type: ADD_TODO,\n        payload: response,\n      });\n    })\n    .catch((err) =>\n      dispatch({\n        type: \"ERROR_IN_ADD_TODO\",\n      })\n    );\n};\nexport const deleteTodo = (todo) => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_DELETE_TODO\",\n  });\n  return api\n    .deleteTodo(todo)\n    .then((response) => {\n      console.log(todo.id);\n\n      dispatch({\n        type: DELETE_TODO,\n        payload: todo.id,\n      });\n    })\n    .catch((err) =>\n      dispatch({\n        type: \"ERROR_IN_DELETING_TODO\",\n      })\n    );\n};\n\nexport const toggleTodo = (elem) => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_TOGGLE_TODO\",\n  });\n  return api.listItemToggle(elem).then((response) => {\n    console.log(elem);\n\n    dispatch({\n      type: TOGGLE_TODO,\n      payload: elem.id,\n    });\n  });\n};\n\nexport const deleteAllTodo = () => async (dispatch, state, api) => {\n  dispatch({\n    type: \"START_DELETE_ALL_TODO\",\n  });\n  return api\n    .deleteAllItems()\n    .then((response) => {\n      console.log(response);\n\n      dispatch({\n        type: DELETE_ALL_TODO,\n        payload: response,\n      });\n    })\n    .catch((err) =>\n      dispatch({\n        type: \"ERROR_IN_DELETED_ALL\",\n      })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}