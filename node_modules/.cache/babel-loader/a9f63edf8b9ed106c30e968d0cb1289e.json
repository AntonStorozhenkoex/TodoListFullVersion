{"ast":null,"code":"import { ADD_TODO, DELETE_ALL_TODO, DELETE_TODO, GET_TODOS_SUCCESS, TOGGLE_TODO } from \"./types\";\n/*\n\nexport const toggleTodoAction = (todo) => ({\n  type: \"TOGGLE_TODO\",\n  id: todo.id,\n});\n\nexport const deleteTodoAction = (todo) => ({\n  type: \"DELETE_TODO\",\n  id: todo.id,\n});\n\nexport const addTodoAction = (inputValue) => ({\n  type: \"ADD_TODO\",\n  id: uuidv4(),\n  value: inputValue,\n});\nexport const deleteAllTodo = (todos) => ({\n  type: \"DELETE_ALL_TODO\",\n  id: todos.id,\n});\n*/\n\nexport const fetchTodos = () => (dispatch, state, api) => {\n  dispatch({\n    type: \"START_LOADING_TODOS\"\n  });\n  return api.fetchData().then(response => {\n    console.log('loading');\n    dispatch({\n      type: GET_TODOS_SUCCESS,\n      payload: response\n    });\n  }).catch(err => dispatch({\n    type: 'ERROR_IN_LOADING_TODOS'\n  }));\n};\nexport const addTodoAPI = inputValue => (dispatch, state, api) => {\n  dispatch({\n    type: 'START_ADD_TODO'\n  });\n  return api.createNewTodo(inputValue).then(response => {\n    console.log(response);\n    dispatch({\n      type: ADD_TODO,\n      payload: response\n    });\n  }).catch(err => dispatch({\n    type: 'ERROR_IN_ADD_TODO'\n  }));\n};\nexport const deleteTodoAPI = todo => (dispatch, state, api) => {\n  dispatch({\n    type: 'START_DELETE_TODO'\n  });\n  return api.deleteTodo(todo).then(response => {\n    console.log(todo.id);\n    dispatch({\n      type: DELETE_TODO,\n      payload: todo.id\n    });\n  }).catch(err => dispatch({\n    type: 'ERROR_IN_DELETING_TODO'\n  }));\n};\nexport const toggleTodoAPI = elem => (dispatch, state, api) => {\n  dispatch({\n    type: 'START_TOGGLE_TODO'\n  });\n  return api.listItemToggle(elem).then(response => {\n    console.log(elem);\n    dispatch({\n      type: TOGGLE_TODO,\n      payload: elem.id\n    });\n  });\n};\nexport const deleteAllTodoAPI = () => async (dispatch, state, api) => {\n  dispatch({\n    type: 'START_DELETE_ALL_TODO'\n  });\n  return api.deleteAllItems().then(response => {\n    console.log(response);\n    dispatch({\n      type: DELETE_ALL_TODO,\n      payload: response\n    });\n  }).catch(err => dispatch({\n    type: 'ERROR_IN_DELETED_ALL'\n  }));\n};","map":{"version":3,"sources":["/home/user/work/TodoListReactReduxAPI/src/redux/todos/action.js"],"names":["ADD_TODO","DELETE_ALL_TODO","DELETE_TODO","GET_TODOS_SUCCESS","TOGGLE_TODO","fetchTodos","dispatch","state","api","type","fetchData","then","response","console","log","payload","catch","err","addTodoAPI","inputValue","createNewTodo","deleteTodoAPI","todo","deleteTodo","id","toggleTodoAPI","elem","listItemToggle","deleteAllTodoAPI","deleteAllItems"],"mappings":"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","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_ALL_TODO,\n  DELETE_TODO,\n  GET_TODOS_SUCCESS,\n  TOGGLE_TODO,\n} from \"./types\";\n/*\n\nexport const toggleTodoAction = (todo) => ({\n  type: \"TOGGLE_TODO\",\n  id: todo.id,\n});\n\nexport const deleteTodoAction = (todo) => ({\n  type: \"DELETE_TODO\",\n  id: todo.id,\n});\n\nexport const addTodoAction = (inputValue) => ({\n  type: \"ADD_TODO\",\n  id: uuidv4(),\n  value: inputValue,\n});\nexport const deleteAllTodo = (todos) => ({\n  type: \"DELETE_ALL_TODO\",\n  id: todos.id,\n});\n*/\n\nexport const fetchTodos = () => (dispatch,state,api) =>{\n  dispatch({\n    type: \"START_LOADING_TODOS\",\n  })\n  return api.fetchData().then(response =>{\n    console.log('loading')\n\n    dispatch({\n      type:GET_TODOS_SUCCESS,\n      payload:response\n    })\n  }).catch(err =>dispatch({\n    type:'ERROR_IN_LOADING_TODOS'\n  }))\n}\nexport const addTodoAPI = (inputValue) => (dispatch, state, api) =>{\n  dispatch({\n    type: 'START_ADD_TODO'\n  })\n  return api.createNewTodo(inputValue).then(response => {\n    console.log(response)\n\n    dispatch({\n      type: ADD_TODO,\n      payload: response\n    })\n  }).catch(err => dispatch({\n    type: 'ERROR_IN_ADD_TODO'\n  }))\n}\nexport const deleteTodoAPI = (todo) => (dispatch,state,api) => {\n  dispatch({\n    type:'START_DELETE_TODO'\n  })\n  return api.deleteTodo(todo).then(response => {\n    console.log(todo.id)\n\n    dispatch({\n      type:DELETE_TODO,\n      payload:todo.id\n    })\n  }).catch(err=>  dispatch({\n    type:'ERROR_IN_DELETING_TODO'\n  }))\n}\n\nexport const toggleTodoAPI = (elem) =>  (dispatch,state,api) =>{\n  dispatch({\n    type:'START_TOGGLE_TODO'\n  })\n  return api.listItemToggle(elem).then(response =>{\n    console.log(elem)\n\n    dispatch({\n      type:TOGGLE_TODO,\n      payload:elem.id\n    })\n  })\n}\n\nexport const deleteAllTodoAPI = () => async  (dispatch,state,api) =>{\n dispatch({\n   type:'START_DELETE_ALL_TODO'\n })\n  return api.deleteAllItems().then(response=>{\n    console.log(response)\n\n    dispatch({\n      type:DELETE_ALL_TODO,\n      payload:response\n    })\n  }).catch(err=>dispatch({\n    type:'ERROR_IN_DELETED_ALL'\n  }))\n}"]},"metadata":{},"sourceType":"module"}